@ Gradle 
  메이븐은 태그로 되어 있다. 그리들로 바뀌면 :id 이렇게 바뀐다. 메이븐 방식은 태그, 쇼츠는 콜론인 것이다.

com.ex 는 루트패키지이다. 

스냅샷은 복구할 때 다시 돌아갈 버전같은 것이다. Git방식과 소스트리를 많이 사용한다. 삼성은 SVN을 사용
이러한 시스템을 형상관리 시스템이라하며 버전별로 관리가 가능하다.

스프링부트 라이브러리가 많다보니까 메인 라이브러리의 버전은 올라가 있는데 하위 버전들이 따라가지 못하는 
호환성 문제가 발생한다. --> 그래서 3.2.5로 낮추고 쓰고 있다.

도커는 소프트웨어를 직접 관리하는 것이다. 컴퓨터에 다운받고 있는 방식은 고장났을 때 교체가 힘들다는 단점이 있다.
도커를 설치하면 그 위에 톰캣, 오라클, 디벨로퍼를 설치하게 되어 컴퓨터에 문제가 생겨도 괜찮다. (?)
그래서 도커를 컨테이너라고 부른다. 도커 위에 설치한 것들은 컴포넌트라고 부른다.
  만약 오라클 11버전이 필요하다고 했을 때, PC 설치시에는 이전 파일을 삭제하고 다시 설치해야했지만 도커는 그냥 추가로 설치하면 된다.
  도커는 리눅스를 기반으로 동작한다. 도커가 고장났을 때 사용하는 것이 쿠버네티스라고 한다.
  카피 파일 도커를 여러 개 만들어서 원본 파일에 문제가 생기면 카피 파일을 실행시키는 방식이다.
  하지만 쿠버네티스도 결국 서버 위에 쓰는 것이므로 고장이 날 수도 있다. 

JPA는 관계형 데이터베이스를 쓴다. Apache Freemaker은 스트럭처에서 사용. (중국과 인도에서 사용하다보니 사용률이 높다.)

@ 라이브러리 오류
  다운받다가 중단됐을 때 오류가 발생하는데 이는 라이브러리를 잘못받은 경우이다.
  annotation 에러가 날 때 security를 지우고 저장한 후 gradle 을 업데이트하면 이전 라이브러리를 삭제한다.
  그리고 다시 라이브러리를 받으면 된다. 
  그래도 안 된다면 project and dependence 뒤 경로가 나오는데 경로를 직접 찾아가서 삭제했다가 다시 깔면 된다.

@ Application properties

spring.jpa.hibernate.ddl-auto=update
  업데이트 기능은 수정을 가능하게 해준다. 하지만 오타가 난 경우에도 컬럼을 생성하고 새로 추가한 컬럼도 만들어주는 단점이 있다.
오타가 났을 때 재작성해야하는데 create로 바꿔줘야한다. 이는 테이블을 삭제하고 다시 만드는 것이다.
spring.jpa.hibernate.ddl-auto=create

spring.jpa.hibernate.ddl-auto=validate 
  이렇게 하면 컬럼을 수정할 수 없다. validate는 있는 그대로 쓰는 것만 허용한다.

오라클에서는 처음 작업할 때 create로 하다가 validate로 바꿔야 한다.
마이바티스와 함께 쓸거면 여기에 추가하면 된다. 충돌하지 않기 때문이다.
리포지토리를 jpa용, mybatis용 총 두 개 만들면 된다.

ddl-auto = create : 서버 실행시마다 DB 재작성 (지웠다가 다시 만든다)
ddl-auto = update : 서버 실행시마다 수정사항을 적용
ddl-auto = validate : DB 수정 적용하지 않음 (컬럼 추가, 생성 불가)























